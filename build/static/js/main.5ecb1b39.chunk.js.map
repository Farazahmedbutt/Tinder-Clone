{"version":3,"sources":["Header.js","SwipeButtons.js","axios.js","TinderCards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","SwipeButtons","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAmBeA,MAdf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAEzC,qBAAKG,IAAI,kBAAkBC,IAAI,OAAOJ,UAAU,iBAChD,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,6FCiB/BK,MAtBf,WACE,OACE,sBAAKL,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACE,cAAC,IAAD,CAAWE,SAAS,YAEtB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAWE,SAAS,YAEtB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACE,cAAC,IAAD,CAAaE,SAAS,gB,kECpBfI,E,OAHEC,EAAMC,OAAO,CAC5BC,QAAS,+CC6CIC,MA1Cf,WACE,IAMA,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KASA,OARAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBR,EAAMS,IAAI,iBAD9B,OACQC,EADR,OAEEJ,EAAUI,EAAIC,MAFhB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IACHC,QAAQC,IAAIT,GAEV,qBAAKZ,UAAU,cAAf,SACE,qBAAKA,UAAU,6BAAf,SACGY,EAAOU,KAAI,SAACC,GACX,OACE,cAAC,IAAD,CACEvB,UAAU,QAEVwB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAxBMC,EAwBeJ,EAAOK,UAvB/CR,QAAQC,IAAR,UAAeM,EAAf,aADa,IAAYA,GAyBfE,iBAAkB,kBAtBVD,EAsB2BL,EAAOK,UArBpDR,QAAQC,IAAR,UAAeO,EAAf,yBADiB,IAACA,GAiBV,SAOE,qBACE5B,UAAU,OACV8B,MAAO,CAAEC,gBAAiB,OAASR,EAAOS,OAAS,KAFrD,SAIE,6BAAKT,EAAOK,UATTL,EAAOK,cCdXK,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ecb1b39.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <IconButton>\r\n        <PersonIcon fontSize=\"large\" className=\"header__icon\" />\r\n      </IconButton>\r\n      <img src=\"/img/tinder.png\" alt=\"logo\" className=\"header__logo\" />\r\n      <IconButton>\r\n        <ForumIcon fontSize=\"large\" className=\"header__icon\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SwipeButtons.css\";\r\nimport ReplyIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nfunction SwipeButtons() {\r\n  return (\r\n    <div className=\"swipeButtons\">\r\n      <IconButton className=\"swipeButtons__repeat\">\r\n        <ReplyIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__left\">\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__star\">\r\n        <StarRateIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__right\">\r\n        <FavoriteIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__lightning\">\r\n        <FlashOnIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://tinder-backend-0321.herokuapp.com/\",\r\n});\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"./TinderCards.css\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nfunction TinderCards() {\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log(`${nameToDelete} removed`);\r\n  };\r\n  const outOfFrame = (name) => {\r\n    console.log(`${name} has left the screen`);\r\n  };\r\n  const [people, setPeople] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const req = await axios.get(\"/tinder/cards\");\r\n      setPeople(req.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(people);\r\n  return (\r\n    <div className=\"tinderCards\">\r\n      <div className=\"tinderCards__cardContainer\">\r\n        {people.map((person) => {\r\n          return (\r\n            <TinderCard\r\n              className=\"swipe\"\r\n              key={person.name}\r\n              preventSwipe={[\"up\", \"down\"]}\r\n              onSwipe={(dir) => swiped(dir, person.name)}\r\n              onCardLeftScreen={() => outOfFrame(person.name)}\r\n            >\r\n              <div\r\n                className=\"card\"\r\n                style={{ backgroundImage: \"url(\" + person.imgUrl + \")\" }}\r\n              >\r\n                <h3>{person.name}</h3>\r\n              </div>\r\n            </TinderCard>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport TinderCards from \"./TinderCards\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}